{{define "uuid3"}}
{{- template "uuid" . -}}
{{- end -}}
{{define "uuid4"}}
{{- template "uuid" . -}}
{{- end -}}
{{define "uuid5"}}
{{- template "uuid" . -}}
{{- end -}}

{{define "uuid" }}
{{ $version := (trimPrefix "uuid" .Name) -}}
{{ if eq .FieldType "string" "*string" -}}
if err := gencheck.IsUUID{{if ne $version ""}}v{{$version}}{{end}}({{if not (isPtr . )}}&{{end}}s.{{.FieldName}}); err != nil {
  {{ addError . "err" }}
}
{{ else if eq .FieldType "[]string" "[]*string" -}}
for index, single{{.FieldName}} := range s.{{.FieldName}} {
  if err := gencheck.IsUUID{{if ne $version ""}}v{{$version}}{{end}}({{if eq .FieldType "[]string"}}&{{end}}single{{.FieldName}}); err != nil {
  {{ addError . (printf `fmt.Errorf("%%s[%%d] - %%s", index, single%s, err)` .FieldName) }}
  }
}
{{ else }}
{{ generationError (printf "uuid is not valid on field '%s %s'" .FieldName .FieldType) }}
{{end}}
{{- end -}}
